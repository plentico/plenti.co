import{user,repoUrl}from"./auth.js";import{env}from"../env.js";const apiBaseUrl=`${repoUrl.origin}/api/v4`;let currentUser;const userAvailable=new Promise(e=>{user.subscribe(t=>{currentUser=t,e()})}),capitalizeFirstLetter=e=>e.charAt(0).toUpperCase()+e.slice(1);export async function publish(e,t,n,s){if(await userAvailable,!currentUser.isAuthenticated)throw new Error("Authentication required");const a=repoUrl.pathname.slice(1),u=`${apiBaseUrl}`+`/projects/${encodeURIComponent(a)}`+"/repository/commits",r={"Content-Type":"application/json",Authorization:`Bearer ${currentUser.tokens.access_token}`},c=e=>e.split(",")[1];let i=[];e.forEach(e=>{i.push({action:n,file_path:e.file,encoding:s,content:s==="base64"?c(e.contents):e.contents})});let l=capitalizeFirstLetter(n)+" "+(e.length>1?e.length+" files":e[0].file);const d={branch:env.cms.branch,commit_message:l,actions:i},o=await fetch(u,{method:"POST",headers:r,body:JSON.stringify(d)});if(o.ok)(n==="create"||n==="update")&&t?.onSave?.(),n==="delete"&&(t?.onDelete?.(),history.pushState(null,"",env.baseurl&&!env.local?env.baseurl:"/"));else{const{error:e,message:t}=await o.json();throw new Error(`Publish failed: ${e||t}`)}}