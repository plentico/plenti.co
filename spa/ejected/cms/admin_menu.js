/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	prevent_default,
	safe_not_equal,
	set_style,
	space,
	svg_element
} from '../../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let nav;
	let a0;
	let svg0;
	let g;
	let path0;
	let t;
	let a1;
	let svg1;
	let path1;
	let path2;
	let mounted;
	let dispose;

	return {
		c() {
			nav = element("nav");
			a0 = element("a");
			svg0 = svg_element("svg");
			g = svg_element("g");
			path0 = svg_element("path");
			t = space();
			a1 = element("a");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			path2 = svg_element("path");
			this.h();
		},
		l(nodes) {
			nav = claim_element(nodes, "NAV", { class: true });
			var nav_nodes = children(nav);
			a0 = claim_element(nav_nodes, "A", { href: true, id: true, class: true });
			var a0_nodes = children(a0);

			svg0 = claim_element(
				a0_nodes,
				"svg",
				{
					alt: true,
					version: true,
					xmlns: true,
					"xmlns:xlink": true,
					x: true,
					y: true,
					width: true,
					viewBox: true,
					style: true,
					"xml:space": true,
					class: true
				},
				1
			);

			var svg0_nodes = children(svg0);
			g = claim_element(svg0_nodes, "g", {}, 1);
			var g_nodes = children(g);
			path0 = claim_element(g_nodes, "path", { d: true }, 1);
			children(path0).forEach(detach);
			g_nodes.forEach(detach);
			svg0_nodes.forEach(detach);
			a0_nodes.forEach(detach);
			t = claim_space(nav_nodes);
			a1 = claim_element(nav_nodes, "A", { href: true });
			var a1_nodes = children(a1);

			svg1 = claim_element(
				a1_nodes,
				"svg",
				{
					alt: true,
					width: true,
					height: true,
					version: true,
					viewBox: true,
					xmlns: true,
					class: true
				},
				1
			);

			var svg1_nodes = children(svg1);
			path1 = claim_element(svg1_nodes, "path", { d: true }, 1);
			children(path1).forEach(detach);
			path2 = claim_element(svg1_nodes, "path", { d: true }, 1);
			children(path2).forEach(detach);
			svg1_nodes.forEach(detach);
			a1_nodes.forEach(detach);
			nav_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(path0, "d", "M540.76,254.788L294.506,38.216c-11.475-10.098-30.064-10.098-41.386,0L6.943,254.788,c-11.475,10.098-8.415,18.284,6.885,18.284h75.964v221.773c0,12.087,9.945,22.108,22.108,22.108h92.947V371.067,c0-12.087,9.945-22.108,22.109-22.108h93.865c12.239,0,22.108,9.792,22.108,22.108v145.886h92.947,c12.24,0,22.108-9.945,22.108-22.108v-221.85h75.965C549.021,272.995,552.081,264.886,540.76,254.788z");
			attr(svg0, "alt", "home");
			attr(svg0, "version", "1.1");
			attr(svg0, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg0, "xmlns:xlink", "http://www.w3.org/1999/xlink");
			attr(svg0, "x", "0px");
			attr(svg0, "y", "0px");
			attr(svg0, "width", "20px");
			attr(svg0, "viewBox", "0 0 547.596 547.596");
			set_style(svg0, "enable-background", "new 0 0 547.596 547.596");
			attr(svg0, "xml:space", "preserve");
			attr(svg0, "class", "svelte-1x5ysi1");
			attr(a0, "href", ".");
			attr(a0, "id", "home");
			attr(a0, "class", "svelte-1x5ysi1");
			attr(path1, "d", "m0 4.6222v10.623c0 1.1129 0.7143 2.2258 1.8367 2.6304l5.1021 1.9223c0.3061 0.1011 0.6122 0.2023 1.0204 0.2023 0.5102 0 1.1224-0.2023 1.6326-0.5058 0.2041-0.2024 0.5102-0.4047 0.6123-0.6071h3.8775c1.5306 0 2.8572-1.214 2.8572-2.8327v-1.0117c0-0.4047-0.30613-0.8094-0.81633-0.8094-0.51021 0-0.81633 0.3035-0.81633 0.8094v1.0117c0 0.7082-0.61224 1.214-1.2245 1.214h-3.3673v-14.568h3.3673c0.71429 0 1.2245 0.50585 1.2245 1.214v1.0117c0 0.40468 0.30612 0.80936 0.81633 0.80936 0.5102 0 0.81633-0.40468 0.81633-0.80936v-1.0117c0-1.5176-1.2245-2.8328-2.8572-2.8328h-3.8775c-0.2041-0.20234-0.4082-0.40468-0.6123-0.60702-0.8163-0.50585-1.7347-0.60702-2.653-0.30351l-5.1021 1.9222c-1.0204 0.30351-1.8367 1.4164-1.8367 2.5292z");
			attr(path2, "d", "m17.143 12.817c0.20408 0 0.40816-0.1011 0.5102-0.2023l2.0408-2.0234c0.10204-0.1012 0.10204-0.2023 0.20408-0.2023 0-0.1012 0.10204-0.2024 0.10204-0.3035 0-0.1012 0-0.2024-0.10204-0.3035 0-0.1012-0.10204-0.2024-0.20408-0.2024l-2.0408-2.0234c-0.30612-0.30351-0.81633-0.30351-1.1224 0s-0.30612 0.80938 0 1.1129l0.71429 0.7082h-4.1837c-0.40816 0-0.81632 0.3035-0.81632 0.8093 0 0.5059 0.40816 0.6071 0.81632 0.6071h4.2857l-0.71429 0.7081c-0.30612 0.3035-0.30612 0.8094 0 1.1129 0.10204 0.1012 0.30613 0.2023 0.51021 0.2023z");
			attr(svg1, "alt", "logout");
			attr(svg1, "width", "20");
			attr(svg1, "height", "20");
			attr(svg1, "version", "1.1");
			attr(svg1, "viewBox", "0 0 20 20");
			attr(svg1, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg1, "class", "svelte-1x5ysi1");
			attr(a1, "href", ".");
			attr(nav, "class", "svelte-1x5ysi1");
		},
		m(target, anchor) {
			insert(target, nav, anchor);
			append(nav, a0);
			append(a0, svg0);
			append(svg0, g);
			append(g, path0);
			append(nav, t);
			append(nav, a1);
			append(a1, svg1);
			append(svg1, path1);
			append(svg1, path2);

			if (!mounted) {
				dispose = listen(a1, "click", prevent_default(/*logout*/ ctx[0]));
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(nav);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self) {
	const logout = () => {
		localStorage.removeItem("PLENTI_CMS_GITLAB_TOKENS");
		location.href = location.pathname;
	};

	return [logout];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Component;