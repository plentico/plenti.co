import allContent from"../../generated/content.js";const validateFilename=(e,t)=>{let n=[];e.length==0&&(n=[...n,"Empty filename is not allowed"]),e.indexOf(" ")>=0&&(n=[...n,"Spaces not allowed in filename"]),e.indexOf("~")>=0&&(n=[...n,"No tilde (~) allowed in filename"]),e.indexOf("`")>=0&&(n=[...n,"No backtick (`) allowed in filename"]),e.indexOf("!")>=0&&(n=[...n,"No exclamation points (!) allowed in filename"]),e.indexOf("@")>=0&&(n=[...n,"No at symbols (@) allowed in filename"]),e.indexOf("#")>=0&&(n=[...n,"No pound symbols (#) allowed in filename"]),e.indexOf("$")>=0&&(n=[...n,"No dollar signs ($) allowed in filename"]),e.indexOf("%")>=0&&(n=[...n,"No percentage symbols (%) allowed in filename"]),e.indexOf("^")>=0&&(n=[...n,"No carrot symbol (^) allowed in filename"]),e.indexOf("&")>=0&&(n=[...n,"No ampersands (&) allowed in filename"]),e.indexOf("*")>=0&&(n=[...n,"No star symbols (*) allowed in filename"]),(e.indexOf("(")>=0||e.indexOf(")")>=0)&&(n=[...n,"No opening or closing round brackets ( ) allowed in filename"]),(e.indexOf("{")>=0||e.indexOf("}")>=0)&&(n=[...n,"No opening or closing curly brackets { } allowed in filename"]),(e.indexOf("[")>=0||e.indexOf("]")>=0)&&(n=[...n,"No opening or closing square brackets [ ] allowed in filename"]),(e.indexOf("<")>=0||e.indexOf(">")>=0)&&(n=[...n,"No opening or closing angle brackets < > allowed in filename"]);const s=allContent.find(n=>n.type==t&&n.filename==e+".json");return s&&(n=[...n,{message:"Content with this filename already exists.",contentPath:s.path}]),n};export default validateFilename