{
	"title": "Media",
	"group": "Structure",
	"order": 2.02,
	"body": "Media files like images and PDFs can be stored in the top level <code>media/</code> directory. Only store files here that you intend content editors to be able to change. This folder hooks into the CMS in order to provide a media browser that can be manipulated through the admin interface.<div><h2>Accessing media in Layouts</h2></div><div>In general you want to reference media in your JSON content and then access it from the <code>content</code> prop to display it in your template in a dynamic way that can be changed by editors. You <i>could</i> reference these assets directly from your templates (e.g.&nbsp;<code>&lt;img src=\"/media/my-image.jpg\" /&gt;</code>)&nbsp;<span style=\"color: var(--base-dark);\">or use a relative path (e.g. if you were adding an image to</span><code>layouts/components/my-component.svelte</code><span style=\"color: var(--base-dark);\">,&nbsp; you could reference the same image like</span><code>&lt;img src=\"../../media/my-image.jpg\" /&gt;</code><span style=\"color: var(--base-dark);\">). However, if your intention is to hardcode an asset in your template that editors can't change, you'd be better served using the top-level <code>static/</code> folder instead.</span><div><h2>Media Browser</h2>When referencing assets in your JSON content source, you should use the full path (e.g. <code>media/path/to/file.jpg</code>) instead of just the filename and then hardcoding the prefex and suffix in your template. This allows the Plenti CMS to recognize the file as an asset and gives you a widget for interacting with the Media Browser to change assetsor upload new ones.</div><div><h2>Filtering</h2></div><div>The nested folder structure you use inside your top-level assets folder becomes the filtering mechanism of the Media Browser. This can be used for narrowing down results in the Library view or setting the path of new files in the Upload view. Note that only folders with a file inside of them will appear this way (similar to how Git doesn't tracking empty folders).</div></div>"
}