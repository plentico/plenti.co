{
	"title": "Baseurl",
	"group": "Configuration",
	"order": 2.5,
	"body": "<h2>Base element</h2>Standard HTML has a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base\" target=\"_blank\" rel=\"noopener noreferrer\">base element</a>&nbsp;that is prepended to all relative URLs and can be used to serve your site from a subfolder (e.g. <code>mysite.com/my-subfolder/</code>), which is common on platforms like&nbsp;<a href=\"https://about.gitlab.com/stages-devops-lifecycle/pages/\" target=\"_blank\" rel=\"noopener noreferrer\">GitLab Pages</a>.<div><h2>Implementation</h2>In your sitewide <code>plenti.json</code> configuration file, you can specify a <code>baseurl</code> like this:</div><div><br><codeblock>{<br>&nbsp;&nbsp;\"baseurl\": \"/my-subfolder/\"<br>}</codeblock><br>The local webserver (<code>plenti serve</code><span style=\"color: var(--base-dark);\">)&nbsp;</span><span style=\"color: var(--base-dark);\">will serve the root of your site from that subfolder:&nbsp;</span><a href=\"http://localhost:3000/my-subfolder/\" target=\"_blank\" rel=\"noreferrer noopener\">http://localhost:3000/my-subfolder/</a><span style=\"color: var(--base-dark);\">.</span></div><div><span style=\"color: var(--base-dark);\"><br></span></div><div><span style=\"color: var(--base-dark);\">The baseurl information gets added to a magic variable called env</span><span style=\"color: var(--base-dark);\">&nbsp;that you can add to the&nbsp;</span><code>&lt;head&gt;</code><span style=\"color: var(--base-dark);\"> element like this:</span></div><div><br><codeblock>&lt;script&gt;<br>&nbsp;&nbsp;export let env;<br>&lt;/script&gt;<br><br>&lt;head&gt;<br>&nbsp;&nbsp;&lt;base href=\"{env.baseurl}\"&gt;<br>&lt;/head&gt;</codeblock><br>(<strong>Note:</strong> make sure to first pass <code>env</code> from the parent component, likely <code>layouts/global/html.svelte</code>)</div><div><h2>Usage</h2>Now that your site is configured to use baseurls, you need to make sure you're actually using relative links (<code>about</code>), not root relative links (<code>/about</code>) or absolute links (<code>https://mysite.com/about</code>). You'll also want to update all links back to your homepage to use a dot <code>.</code> instead of a forward slash <code>/</code>in order to work with the base element correctly when deployed.</div>"
}