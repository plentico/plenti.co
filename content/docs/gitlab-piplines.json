{
	"title": "GitLab Pipelines",
	"group": "Deployment",
	"order": 5.02,
	"body": "<h2>Description</h2><a href=\"https://about.gitlab.com/stages-devops-lifecycle/pages/\">GitLab Pages</a> is a <em>free</em> hosting service integrated directly with GitLab. You can have your Plenti websites automatically deploy to GitLab Pages by adding a <code>.gitlab-ci.yml</code>&nbsp;file to your project to automatically build and deploy your website every time you push to your master branch on GitLab.<div><br></div><div>Unfortunately GitLab has&nbsp;<a href=\"https://github.com/plentico/plenti/issues/180\" target=\"_blank\" rel=\"noreferrer noopener\">a bug</a>&nbsp;that is preventing us from using the&nbsp;<a href=\"https://hub.docker.com/orgs/plentico\" target=\"_blank\" rel=\"noreferrer noopener\">official Docker image</a>&nbsp;for the project like you'd expect:&nbsp;<br><div><br><codeblock>image:<br>&nbsp;&nbsp;name: plentico/plenti:latest<br>&nbsp;&nbsp;entrypoint: [\"\"]<br><br>pages:<br>&nbsp;&nbsp;script:<br>&nbsp;&nbsp;&nbsp;&nbsp;- /plenti build<br>&nbsp;&nbsp;artifacts:<br>&nbsp;&nbsp;&nbsp;&nbsp;paths:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- public<br>&nbsp;&nbsp;only:<br>&nbsp;&nbsp;&nbsp;&nbsp;- master</codeblock><div><br></div><div>So for now we have a temporary workaround you can use:<br></div></div></div><div><br></div><codeblock>image: docker:stable<br><br>pages:<br>&nbsp; before_script:<br>&nbsp; &nbsp; - apk add --update curl wget &amp;&amp; rm -rf /var/cache/apk/*<br>&nbsp; script:<br>&nbsp; &nbsp; - wget -c $(curl -s https://api.github.com/repos/plentico/plenti/releases/latest | grep -o 'http.*linux_64-bit.tar.gz')<br>&nbsp; &nbsp; - tar -zxvf *_linux_64-bit.tar.gz<br>&nbsp;&nbsp;&nbsp;&nbsp;- ./plenti build<br>&nbsp;&nbsp;artifacts:<br>&nbsp;&nbsp;&nbsp;&nbsp;paths:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- public<br>&nbsp;&nbsp;only:<br>&nbsp;&nbsp;&nbsp;&nbsp;- master</codeblock><div><br></div><div>It is a good idea to lock your CI to a specific Plenti version in production to ensure that new changes do not break your site. Until Plenti reaches a stable v1.0.0 release, the API might change periodically, so it's a good idea to test newer versions locally before pushing to a live site. Otherwise if you're simply pulling in the latest version, every change made by a content editor will grab the newest release and that may not be compatible with your current codebase. Here's an example of locking your Plenti version to v0.6.62 (just replace that with whatever version you want to use):<br></div><div><br></div><codeblock>image: docker:stable<br><br>pages:<br>&nbsp; before_script:<br>&nbsp; &nbsp; - apk add --update curl wget &amp;&amp; rm -rf /var/cache/apk/*<br>&nbsp; script:<br>&nbsp; &nbsp; - wget https://github.com/plentico/plenti/releases/download/v0.6.62/plenti_0.6.62_linux_64-bit.tar.gz<br>&nbsp; &nbsp; - tar -zxvf plenti_0.6.62_linux_64-bit.tar.gz<br>&nbsp;&nbsp;&nbsp;&nbsp;- ./plenti build<br>&nbsp;&nbsp;artifacts:<br>&nbsp;&nbsp;&nbsp;&nbsp;paths:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- public<br>&nbsp;&nbsp;only:<br>&nbsp;&nbsp;&nbsp;&nbsp;- master</codeblock>"
}